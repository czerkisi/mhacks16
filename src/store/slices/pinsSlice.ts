import { createSlice, PayloadAction } from '@reduxjs/toolkit';
import { v4 as uuidv4 } from 'uuid';

export interface Pin {
    uid: string;
    title: string;
    latitude: number;
    longitude: number;
}

interface PinsState {
    allPins: Pin[];
    selectedPins: Pin[]; // Array of selected pin UIDs
}

const initialState: PinsState = {
    allPins: [
        {
            uid: uuidv4(),
            title: 'Central Park',
            latitude: 40.785091,
            longitude: -73.968285,
        },
        {
            uid: uuidv4(),
            title: 'Times Square',
            latitude: 40.758896,
            longitude: -73.985130,
        },
        {
            uid: uuidv4(),
            title: 'Empire State Building',
            latitude: 40.748817,
            longitude: -73.985428,
        },
    ],
    selectedPins: [],
};

const pinsSlice = createSlice({
    name: 'pins',
    initialState,
    reducers: {
        setSelectedPins: (state, action: PayloadAction<Pin[]>) => {
            console.log(`setting selected pins`);
            state.selectedPins = action.payload;
            console.log(`selected pins length: ${state.selectedPins.length}`);
        },
        addPin: (state, action: PayloadAction<{ title: string; latitude: number; longitude: number }>) => {
            const newPin: Pin = {
                uid: uuidv4(),
                ...action.payload,
            };
            state.allPins.push(newPin);
        },
        removePin: (state, action: PayloadAction<string>) => {
            state.allPins = state.allPins.filter((pin) => pin.uid !== action.payload);
            state.selectedPins = state.selectedPins.filter((pin) => pin.uid !== action.payload);
        },
    },
});

// Export the actions generated by createSlice
export const { setSelectedPins, addPin, removePin } = pinsSlice.actions;

// Export the reducer generated by createSlice
export default pinsSlice.reducer;
